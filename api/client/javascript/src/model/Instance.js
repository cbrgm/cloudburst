/**
 * Cloudburst
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContainerSpec from './ContainerSpec';
import InstanceStatus from './InstanceStatus';

/**
 * The Instance model module.
 * @module model/Instance
 * @version 0.0.0
 */
class Instance {
    /**
     * Constructs a new <code>Instance</code>.
     * @alias module:model/Instance
     * @param name {String} 
     * @param endpoint {String} 
     * @param provider {String} 
     * @param active {Boolean} 
     * @param container {module:model/ContainerSpec} 
     * @param status {module:model/InstanceStatus} 
     */
    constructor(name, endpoint, provider, active, container, status) { 
        
        Instance.initialize(this, name, endpoint, provider, active, container, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, endpoint, provider, active, container, status) { 
        obj['name'] = name;
        obj['endpoint'] = endpoint;
        obj['provider'] = provider;
        obj['active'] = active;
        obj['container'] = container;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>Instance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Instance} obj Optional instance to populate.
     * @return {module:model/Instance} The populated <code>Instance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Instance();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('container')) {
                obj['container'] = ContainerSpec.constructFromObject(data['container']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = InstanceStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
Instance.prototype['name'] = undefined;

/**
 * @member {String} endpoint
 */
Instance.prototype['endpoint'] = undefined;

/**
 * @member {String} provider
 */
Instance.prototype['provider'] = undefined;

/**
 * @member {Boolean} active
 */
Instance.prototype['active'] = undefined;

/**
 * @member {module:model/ContainerSpec} container
 */
Instance.prototype['container'] = undefined;

/**
 * @member {module:model/InstanceStatus} status
 */
Instance.prototype['status'] = undefined;






export default Instance;

