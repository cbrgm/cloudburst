/*
 * Cloudburst
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContainerSpec struct for ContainerSpec
type ContainerSpec struct {
	Name *string `json:"name,omitempty"`
	Image *string `json:"image,omitempty"`
}

// NewContainerSpec instantiates a new ContainerSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerSpec() *ContainerSpec {
	this := ContainerSpec{}
	return &this
}

// NewContainerSpecWithDefaults instantiates a new ContainerSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerSpecWithDefaults() *ContainerSpec {
	this := ContainerSpec{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ContainerSpec) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSpec) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ContainerSpec) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ContainerSpec) SetName(v string) {
	o.Name = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ContainerSpec) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSpec) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ContainerSpec) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ContainerSpec) SetImage(v string) {
	o.Image = &v
}

func (o ContainerSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	return json.Marshal(toSerialize)
}

type NullableContainerSpec struct {
	value *ContainerSpec
	isSet bool
}

func (v NullableContainerSpec) Get() *ContainerSpec {
	return v.value
}

func (v *NullableContainerSpec) Set(val *ContainerSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerSpec(val *ContainerSpec) *NullableContainerSpec {
	return &NullableContainerSpec{value: val, isSet: true}
}

func (v NullableContainerSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


